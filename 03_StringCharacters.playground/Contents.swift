import UIKit

/*
 MARK: - üè† –î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ.
 
 TODO: - üßë‚Äçüíª –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–∞–∂–¥—ã–π –∏–∑ –ø—É–Ω–∫—Ç–æ–≤ –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞. –†–µ—à–µ–Ω–∏–µ –ø–∏—à–∏—Ç–µ –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–æ–∫–µ –ø–æ—Å–ª–µ –∑–∞–¥–∞–Ω–∏—è:
 */
 // - –ø—Ä–æ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É let emptyString —Å –ø–æ–º–æ—â—å—é —Å—Ç—Ä–æ–∫–æ–≤–æ–≥–æ –ª–∏—Ç–µ—Ä–∞–ª–∞
let emptyString: String = ""
 
 // - –ø—Ä–æ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É var message —Å –ø–æ–º–æ—â—å—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ç–æ—Ä–∞
var message: String = String()
 
 // - –ø—Ä–æ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—É—é –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É
let manyString: String = """
"""
 
 // - –∏—Å–ø–æ–ª—å–∑—É—è –∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏—é, —Å–æ–∑–¥–∞–π—Ç–µ —Å—Ç—Ä–æ–∫—É "The images were loaded", –≤ –∫–æ—Ç–æ—Ä–æ–π –≤–º–µ—Å—Ç–æ "The" –ø–æ–¥—Å—Ç–∞–≤—å—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç–∏–Ω–æ–∫ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π count (–æ–±—ä—è–≤–∏—Ç—å)
var count: String = "Seventh"

var stringWithInterpolation: String = "\(count) images were loaded"
 
 // - –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏—é –¥–æ–±–∞–≤—å—Ç–µ message –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –ø—É–Ω–∫—Ç–∞
message += count
 
 
 // - —Ä–∞—Å–ø–µ—á–∞—Ç–∞–π—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –≤ message –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ –Ω–µ –ø—É—Å—Ç–∞—è, –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ –ø—É—Å—Ç–∞—è - –Ω–∏—á–µ–≥–æ –¥–µ–ª–∞—Ç—å –Ω–µ –Ω–∞–¥–æ
//message = "Swift"
print(message.count)

print("=============================================================================================================================================================")
 // - —Ä–∞—Å–ø–µ—á–∞—Ç–∞–π—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å —Å–ª–µ–¥—É—é—â–∏–µ —Ç–µ–∫—Å—Ç (—Ç—Ä–∏ —Å—Ç—Ä–æ—á–∫–∏ —Å –ø—Ä—è–º–æ–π —Ä–µ—á—å—é). –°—Ç—Ä–æ–∫–∏ –¥–æ–ª–∂–Ω—ã –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å -, –∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–µ. –û—Ç—Å—Ç—É–ø –¥–ª—è –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∫–∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω. –ß—Ç–æ–±—ã –≤—Å—Ç–∞–≤–∏—Ç—å —Å–º–∞–π–ª–∏–∫–∏, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —é–Ω–∏–∫–æ–¥. –í–µ—Å—å —Ç–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—Ç—å —Å–æ–±–æ–π –æ–¥–Ω—É –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é, –∫–æ—Ç–æ—Ä—É—é –∏ –Ω—É–∂–Ω–æ —Ä–∞—Å–ø–µ—á–∞—Ç–∞—Ç—å. –î–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è String –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏—é –∏/–∏–ª–∏ –∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏—é.
/*
    - "Hello, how are you?" - asked he.
        - "I'm nice, thank you üòä. And you?" - answered Mary.
    - "Not so good üòí"
*/
let firstString: String = "- \"Hello, how are you?\""
let askString: String = "- asked he. \n"
let secondString: String = "\t - \"I'm nice, thank you \u{1F60A}. And you?\""
let asnswerString: String = "- answered Mary."
let thirdString: String = "\n- \"Not so good \u{1F612}\""
let spaceString: String = " "
var totalString: String = """
 """
totalString = firstString + spaceString + spaceString + askString + spaceString + secondString + spaceString + asnswerString + thirdString
print(totalString)

// MARK: - Task with * üßê
/* –î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∑–∞–¥–∞—á–∏ –≤–∞–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è —Ö–æ—Ä–æ—à–æ –∏–∑—É—á–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –ø–æ String.

 –î–ª—è –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è:
 - –ø–æ–¥—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –≤ —Ç–µ–∫—Å—Ç–µ
 - –ø–æ–¥—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –≤ —Ç–µ–∫—Å—Ç–µ
 - –∑–∞–º–µ–Ω–∏—Ç–µ –≤—Å–µ –≥–ª–∞—Å—Å–Ω—ã–µ –±—É–∫–≤—ã –Ω–∞ *

 */
print("===========================================================================================================================================================")

let words = totalString.components(separatedBy: CharacterSet.whitespacesAndNewlines.union(.punctuationCharacters).union(.symbols))
let filteredWords = words.filter { !$0.isEmpty }
let howManyWordsInText = filteredWords.count

print("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –≤ —Ç–µ–∫—Å—Ç–µ: \(howManyWordsInText)")
print("–°–ª–æ–≤–∞ –≤ —Ç–µ–∫—Å—Ç–µ: \(filteredWords)")

print("=============================================================================================================================================================")

let sentences = totalString.components(separatedBy: CharacterSet(charactersIn: ".!?"))
let filteredSentences = sentences.filter{ sentence in !sentence.trimmingCharacters(in: .whitespaces).isEmpty }
let sentenceCount = filteredSentences.count

print("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π: \(sentenceCount)")
print("–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –≤ —Ç–µ–∫—Å—Ç–µ: \(filteredSentences)")


//–ß–µ—Ä–µ–∑ CharacterSet –∏ redex –≤—ã—Ä–∞–∂–µ–Ω–∏—è.
//–û—Ç –ø—Ä–æ–±–µ–ª–æ–≤ (\n) –º–æ–∂–Ω–æ –∏–∑–±–∞–≤–∏—Ç—å —Å –ø–æ–º–æ—â—å—é .whitespaces, –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–æ–≤ (\t) —Ç–æ–∂–µ –µ—Å—Ç—å —Å–≤–æ–π—Å—Ç–≤–æ, –∫–∞–∂–µ—Ç—Å—è .newlines

print("=============================================================================================================================================================")
/* These letters are vowels in English: A, E, I, O and U (and sometimes W and Y) It is said that Y is "sometimes" a vowel because it represents both vowel and consonant sounds. In the words cry, sky, fly, my and why, the letter Y represents the vowel sound /a…™/.
*/

let text = totalString
let vowelLetter = "aieouywAEIOUYW"
var updatedText = totalString

for vowel in vowelLetter {
    updatedText = updatedText.replacingOccurrences(of: String(vowel), with: "*")
}

print(updatedText)

// TODO: - ‚ùì –í–æ–ø—Ä–æ—Å—ã –∫ –∏–∑—É—á–µ–Ω–∏—é (–ø–∏—Å–∞—Ç—å –æ—Ç–≤–µ—Ç—ã –Ω–µ –Ω—É–∂–Ω–æ, –Ω–æ –±—ã—Ç—å –≥–æ—Ç–æ–≤—ã–º –æ—Ç–≤–µ—Ç–∏—Ç—å):
/*
 - –ß—Ç–æ —Ç–∞–∫–æ–µ –∫–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏—è?
 - –ß—Ç–æ —Ç–∞–∫–æ–µ –∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏—è?
 - –ß—Ç–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∏–∑ —Å–µ–±—è —Ç–∏–ø Character?
 - –ß—Ç–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∏–∑ —Å–µ–±—è —Ç–∏–ø String?
 */
print("=============================================================================================================================================================")
