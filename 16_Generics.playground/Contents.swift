import UIKit

// MARK: - üè† –î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ.
 
// TODO: - üßë‚Äçüíª
// –ù–∞–ø–∏—à–∏—Ç–µ generic —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ –ª—é–±–æ–≥–æ —Ç–∏–ø–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç.

func acceptArray<SomeType>(elements: [SomeType]) -> SomeType? {
    return  elements.first
}

let doubleArray = [1.9, 2.4, 2.5, 3.0, 3.3, 2.4, 1.6, 2.0, 5.0, 7.0, 6.3]
acceptArray(elements: doubleArray)

// –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é printArray, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ –ª—é–±–æ–≥–æ —Ç–∏–ø–∞ –∏ –ø–µ—á–∞—Ç–∞–µ—Ç –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ –Ω–∞ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–µ.

func printArray<SomeTypeForPrint>(items: [SomeTypeForPrint]) {
    for item in items {
        print(item)
    }
}

printArray(items: doubleArray)

// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é findMax, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ –ª—é–±–æ–≥–æ —Ç–∏–ø–∞, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ –ø—Ä–æ—Ç–æ–∫–æ–ª—É Comparable –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞. –ï—Å–ª–∏ –º–∞—Å—Å–∏–≤ –ø—É—Å—Ç–æ–π, —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å nil.

func findMax<SomeTypeForFindMax: Comparable>(someElements: [SomeTypeForFindMax]) -> SomeTypeForFindMax? {
    return someElements.max() ?? nil
}

findMax(someElements: doubleArray)

// Extra task*
// –°–æ–∑–¥–∞–π—Ç–µ generic –ø—Ä–æ—Ç–æ–∫–æ–ª CompareProtocol, –∫–æ—Ç–æ—Ä—ã–π –æ–±—ä—è–≤–ª—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –¥–≤—É—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –æ–¥–Ω–æ–≥–æ –∏ —Ç–æ–≥–æ –∂–µ —Ç–∏–ø–∞. –ú–µ—Ç–æ–¥ –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å Bool value –∫–∞–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –¥–≤—É—Ö –æ–±—ä–µ–∫—Ç–æ–≤. –û–±—ä—è–≤–∏—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏–ª–∏ –∫–ª–∞—Å—Å, –ø–æ–¥—á–∏–Ω–∏—Ç–µ –ø—Ä–æ—Ç–æ–∫–æ–ª—É, –¥–æ–±–∞–≤—å—Ç–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é. –°–æ–∑–¥–∞–π—Ç–µ –º–∞—Å—Å–∏–≤ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏ –æ—Ç—Å–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –µ–≥–æ, –∏—Å–ø–æ–ª—å–∑—É—è –≤–∞—à –º–µ—Ç–æ–¥.



protocol CompareProtocol {
    func compareElements<SomeTypeForCompare: Comparable>(_ itemOne: SomeTypeForCompare, _ itemTwo: SomeTypeForCompare) -> Bool
}

class SomeTypeForCompare: CompareProtocol {
    
    func compareElements<SomeTypeForCompare: Comparable>(_ itemOne: SomeTypeForCompare, _ itemTwo: SomeTypeForCompare) -> Bool {
        return itemOne < itemTwo
        // –î—É–º–∞—é —á—Ç–æ —Å—Ç—Ä–æ–∫–∞ –≤—ã—à–µ –µ—Å–ª–∏ –∏ –≤–µ—Ä–Ω–æ –Ω–∞–ø–∏—Å–∞–Ω–∞, —Ç–æ –Ω–µ –¥–æ –∫–æ–Ω—Ü–∞, –µ—â–µ —á–µ–≥–æ-—Ç–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç, –Ω–æ –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é –Ω–µ –∑–Ω–∞—é –∫–∞–∫ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å –≤–µ—Ä–Ω–æ :(
    }
}

let someVariable = SomeTypeForCompare()

var doubleArrayForCompare = [1.9, 2.4, 2.5, 3.0, 3.3, 2.4, 1.6, 2.0, 5.0, 7.0, 6.3]

someVariable.compareElements(doubleArrayForCompare[2], doubleArrayForCompare[8])


/*
 TODO: - ‚ùì –í–æ–ø—Ä–æ—Å—ã –∫ –∏–∑—É—á–µ–Ω–∏—é:
 - –ó–∞—á–µ–º –Ω—É–∂–Ω—ã –¥–∂–µ–Ω–µ—Ä–∏–∫–∏?
 - –°–∏–Ω—Ç–∞–∫—Å–∏—Å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –¥–∂–µ–Ω–µ—Ä–∏–∫ —Ñ—É–Ω–∫—Ü–∏–∏?
 - –ö–∞–∫ –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å —Ç–∏–ø, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –≤ –¥–∂–µ–Ω–µ—Ä–∏–∫ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –¥–∂–µ–Ω–µ—Ä–∏–∫ —Ç–∏–ø–µ?
 */

