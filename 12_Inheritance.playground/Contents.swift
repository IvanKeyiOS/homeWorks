import UIKit

// MARK: - üè† –î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ.
 
// TODO: - üßë‚Äçüíª
/*
 –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å Car. –ù–∞–¥–µ–ª–∏—Ç–µ –µ–≥–æ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏ –∏ –º–µ—Ç–æ–¥–∞–º–∏ –Ω–∞ –≤–∞—à–µ —É—Å–º–æ—Ç—Ä–µ–Ω–∏–µ.
 –ö–ª–∞—Å—Å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–≤–æ–π—Å—Ç–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç —è–≤–ª—è–µ—Ç—Å—è —Ç–∏–ø–∞–º–∏ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–π. –ü–æ–¥—É–º–∞–π—Ç–µ, –∫–∞–∫–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ —É–¥–æ–±–Ω–µ–µ –æ–±—ä—è–≤–ª—è—Ç—å –∫–∞–∫ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—è.
 –°–æ–∑–¥–∞–π—Ç–µ 2 –∫–ª–∞—Å—Å–∞ –Ω–∞—Å–ª–µ–¥–Ω–∏–∫–∞ - Sedan –∏ Crossover (–∏–ª–∏ –¥—Ä—É–≥–∏–µ —Ç–∏–ø—ã –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –Ω–∞ –≤–∞—à–µ —É—Å–º–æ—Ç—Ä–µ–Ω–∏–µ)
 –î–æ–±–∞–≤—å—Ç–µ –≤ –∫–ª–∞—Å—Å—ã-–Ω–∞—Å–ª–µ–¥–Ω–∏–∫–∏ —Å–≤–æ–π—Å—Ç–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–ª–∏—á–∞—é—Ç –≤–∞—à–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ –¥—Ä—É–≥ –æ—Ç –¥—Ä—É–≥–∞. –ù–∞–ø—Ä. –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª–∞, —Ä–∞–º–∞, –ø—Ä–∏–≤–æ–¥ 4—Ö4 –∏ –¥—Ä.
 –í —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–ª–∞—Å—Å –¥–æ–±–∞–≤—å—Ç–µ –º–µ—Ç–æ–¥ start, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∑–∞–≤–æ–¥–∏—Ç—å –≤–∞—à—É –º–∞—à–∏–Ω—É. –ó–∞–∫—Ä–æ–π—Ç–µ —ç—Ç–æ—Ç –º–µ—Ç–æ–¥ –æ—Ç –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è.
 –í —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–ª–∞—Å—Å –¥–æ–±–∞–≤—å—Ç–µ –º–µ—Ç–æ–¥ setup, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∑–∞–¥–∞–≤–∞—Ç—å –≤–∞—à–µ–º—É –∞–≤—Ç–æ –∫–∞–∫–∏–µ –ª–∏–±–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏.
 –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –º–µ—Ç–æ–¥ setup –≤ –∫–ª–∞—Å—Å–∞—Ö-–Ω–∞—Å–ª–µ–¥–Ω–∏–∫–∞—Ö.
*/

enum Fuel {
    case diesel
    case gasoline
    case hybrid
    case naturalGas
}

enum Tranmission {
    case manual
    case sequentialManual
    case semiAutomatic
    case automatedManualOrClutchlessManual
    case automatic
    case hydraulicAutomatic
    case dualClutch
}

class Car {
    let mark: String
    let model: String
    let typeFuel: Fuel
    let transmission: Tranmission
    let engine: Double
    
    init(mark: String,
         model: String,
         typeFuel: Fuel,
         transmission: Tranmission,
         engine: Double) {
        self.mark = mark
        self.model = model
        self.typeFuel = typeFuel
        self.transmission = transmission
        self.engine = engine
    }
    
    final func start() {
        print("Start engine")
    }
    
    func setup() {
        print("Adjust suspension")
    }
}

let car = Car(mark: "Volvo", model: "XC90", typeFuel: .gasoline, transmission: .automatic, engine: 3.0)
car.start()
car.setup()

class Crossover: Car {
    let isLockDifferential: Bool
    
    init(mark: String,
         model: String,
         typeFuel: Fuel,
         transmission: Tranmission,
         engine: Double,
         isLockDifferential: Bool) {
        self.isLockDifferential = isLockDifferential
        super.init(mark: mark, model: model, typeFuel: typeFuel, transmission: transmission, engine: engine)
    }
    
    override func setup() {
        print("Turn of all-wheel drive")
    }
}

let crossover = Crossover(mark: "BMW", model: "X6", typeFuel: .diesel, transmission: .hydraulicAutomatic, engine: 5.0, isLockDifferential: true)
crossover.start()
crossover.setup()

class Sedan: Car {
    let weight: Int
    
    init(mark: String,
         model: String,
         typeFuel: Fuel,
         transmission: Tranmission,
         engine: Double,
         weight: Int) {
        self.weight = weight
        super.init(mark: mark, model: model, typeFuel: typeFuel, transmission: transmission, engine: engine)
    }
    
    override func setup() {
        print("Open panoramic roof")
    }
}

let sedan = Sedan(mark: "Audi", model: "A8", typeFuel: .naturalGas, transmission: .semiAutomatic, engine: 3.0, weight: 2080)
sedan.start()
sedan.setup()

/*
 TODO: - ‚ùì –í–æ–ø—Ä–æ—Å—ã –∫ –∏–∑—É—á–µ–Ω–∏—é:
 - –ß—Ç–æ –∑–Ω–∞—á–∏—Ç –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ?
 - –ö–∞–∫–æ–π –∫–ª–∞—Å—Å –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –±–∞–∑–æ–≤—ã–º –∏–ª–∏ —Å—É–ø–µ—Ä–∫–ª–∞—Å—Å–æ–º, –∫–∞–∫–æ–π –ø–æ–¥–∫–ª–∞—Å—Å–æ–º –Ω–∞—Å–ª–µ–¥–Ω–∏–∫–æ–º?
 - –í —á–µ–º –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –º–µ—Ö–∞–Ω–∏–∑–º –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è? –ß—Ç–æ –º—ã –º–æ–∂–µ–º –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è—Ç—å?
 - –ö–∞–∫ –∑–∞–ø—Ä–µ—Ç–∏—Ç—å –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ?
 - –ö–∞–∫ –∑–∞–ø—Ä–µ—Ç–∏—Ç—å –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –æ—Ç –∫–ª–∞—Å—Å–∞?
 */

//override func setup() {
//    print("Turn off all-wheel drive")
//}
